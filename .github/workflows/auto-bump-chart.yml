name: Auto bump chart

env:
  ORG: ukff
  SAP: SAP
  BTP_OPERATOR_REPO: sap-btp-service-operator
  BTP_MANAGER_REPO: btp-manager
  GIT_EMAIL: <>
  GIT_NAME: BTP Manager
  USERNAME: ukff

on:
  workflow_dispatch:

jobs:
  auto-bump-chart:
    runs-on: ubuntu-latest
   
    steps:

    - name: Get tag for latest version
      shell: bash
      run: |
        latest=$(curl \
                  -H "Accept: application/vnd.github+json" \
                  -H "X-GitHub-Api-Version: 2022-11-28" \
                  https://api.github.com/repos/$SAP/$BTP_OPERATOR_REPO/releases/latest | jq -r '.tag_name') 
        echo "TAG=${latest}" >> $GITHUB_ENV

    - name: Download Chart
      run: |
        curl -L https://github.com/$SAP/$BTP_OPERATOR_REPO/releases/download/$TAG/sap-btp-operator-$TAG.tgz > charts.tgz
        tar zxvf charts.tgz 
        mv sap-btp-operator module-chart

    - name: Clone Kyma Repo 
      run: |
        git clone https://github.com/$ORG/$BTP_MANAGER_REPO.git

    - name: Check if charts changed
      shell: bash
      run: |
        latest_sha=$(find ./module-chart -type f -exec md5sum {} + | LC_ALL=C sort | md5sum)
        current_sha=$(find $BTP_MANAGER_REPO/module-chart -type f -exec md5sum {} + | LC_ALL=C sort | md5sum)

        echo $latest_sha
        echo $current_sha

        if [[ "$latest_sha" == "$current_sha" ]]; then
          echo Files are the same. No need to make bump of charts.
          exit 0
        fi

    - name: Make templates
      run: |
        ls -la
        ./apply-overrides.sh $TAG
        
    - name: Create PR
      working-directory: btp-manager
      run: |
        git config --global user.email $GIT_EMAIL
        git config --global user.name $GIT_NAME
 
        BRANCH_NAME="chart-$TAG"
        GIT_MSG="Auto-update charts to $TAG" 

        git checkout -B $BRANCH_NAME
        yes | cp -rf ../module-resources .
        yes | cp -rf ../module-chart .
        
        git add .
        git commit -m "$GIT_MSG"

        git remote set-url origin https://x-access-token:${{ secrets.ACCESS_TOKEN }}@github.com/$ORG/$BTP_MANAGER_REPO.git
        git push --set-upstream origin $BRANCH_NAME -f

        prs=$(gh pr list -R https://github.com/$ORG/$BTP_MANAGER_REPO/ -A $USERNAME --state open --json headRefName | jq -r '.[] | .headRefName')
        echo $prs

        if  echo $prs | tr " " '\n' | grep -F -q -x $BRANCH_NAME; then
            echo "open pr already exists, no need to create new one, pr will be updated by push from previous step"
            exit 0
        fi
       
        gh pr create -B main -R https://github.com/$ORG/$BTP_MANAGER_REPO/ --title "$GIT_MSG" --fill
      env:
        GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}